{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DELL/Uswift/dashboard/app/api/mistral/files/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function GET() {\r\n  // List files\r\n  const apiKey = process.env.MISTRAL_API_KEY;\r\n  const apiUrl = process.env.MISTRAL_FILES_API_URL;\r\n  if (!apiKey || !apiUrl) {\r\n    return NextResponse.json({ error: 'Mistral API key or files URL not configured.' }, { status: 500 });\r\n  }\r\n  try {\r\n    const res = await fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    if (!res.ok) {\r\n      return NextResponse.json({ error: data.error || 'Mistral API error', details: data }, { status: res.status });\r\n    }\r\n    return NextResponse.json({ result: data }, { status: 200 });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: err?.message || 'Request failed.' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  // Upload file\r\n  const apiKey = process.env.MISTRAL_API_KEY;\r\n  const apiUrl = process.env.MISTRAL_FILES_API_URL;\r\n  if (!apiKey || !apiUrl) {\r\n    return NextResponse.json({ error: 'Mistral API key or files URL not configured.' }, { status: 500 });\r\n  }\r\n  const formData = await req.formData();\r\n  const file = formData.get('file');\r\n  if (!file || !(file instanceof Blob)) {\r\n    return NextResponse.json({ error: 'Missing file.' }, { status: 400 });\r\n  }\r\n  try {\r\n    const uploadRes = await fetch(apiUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${apiKey}`,\r\n      },\r\n      body: file,\r\n    });\r\n    const data = await uploadRes.json();\r\n    if (!uploadRes.ok) {\r\n      return NextResponse.json({ error: data.error || 'Mistral API error', details: data }, { status: uploadRes.status });\r\n    }\r\n    return NextResponse.json({ result: data }, { status: 200 });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: err?.message || 'Upload failed.' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(req: NextRequest) {\r\n  // Delete file by id\r\n  const apiKey = process.env.MISTRAL_API_KEY;\r\n  const apiUrl = process.env.MISTRAL_FILES_API_URL;\r\n  if (!apiKey || !apiUrl) {\r\n    return NextResponse.json({ error: 'Mistral API key or files URL not configured.' }, { status: 500 });\r\n  }\r\n  const { searchParams } = new URL(req.url);\r\n  const fileId = searchParams.get('id');\r\n  if (!fileId) {\r\n    return NextResponse.json({ error: 'Missing file id.' }, { status: 400 });\r\n  }\r\n  try {\r\n    const deleteRes = await fetch(`${apiUrl}/${fileId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Bearer ${apiKey}`,\r\n      },\r\n    });\r\n    const data = await deleteRes.json();\r\n    if (!deleteRes.ok) {\r\n      return NextResponse.json({ error: data.error || 'Mistral API error', details: data }, { status: deleteRes.status });\r\n    }\r\n    return NextResponse.json({ result: data }, { status: 200 });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: err?.message || 'Delete failed.' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}